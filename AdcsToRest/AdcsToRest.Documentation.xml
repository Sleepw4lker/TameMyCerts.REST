<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AdcsToRest</name>
    </assembly>
    <members>
        <member name="T:AdcsToRest.ActiveDirectory">
            <summary>
                A class holding methods that help acquiring PKI related information from Active Directory.
            </summary>
        </member>
        <member name="M:AdcsToRest.ActiveDirectory.GetCertificateAuthority(System.String,System.Boolean)">
            <summary>
                Retrieves a certification authority and the templates bound to it from Active Directory.
            </summary>
            <param name="certificateAuthority">The name of the target certificate authority.</param>
            <exception cref="T:System.Web.Http.HttpResponseException">
                Throws a HTTP 404 error if the specified certificate authority was not found in
                Active Directory.
            </exception>
        </member>
        <member name="M:AdcsToRest.ActiveDirectory.GetCertificateAuthorityList(System.Boolean)">
            <summary>
                Retrieves a list of all certificate authorities in the Active Directory forest, and the templates bound to each.
            </summary>
        </member>
        <member name="M:AdcsToRest.ActiveDirectory.GetConfigString(System.String)">
            <summary>
                Retrieves the configuration string for a certificate authority.
            </summary>
            <param name="certificateAuthority">The name of the target certificate authority.</param>
            <returns>The configuration string, built from the CA's DNS name and the CA common name.</returns>
            <exception cref="T:System.Web.Http.HttpResponseException">
                Throws a HTTP 404 error if the specified certificate authority was not found in
                Active Directory.
            </exception>
        </member>
        <member name="T:AdcsToRest.CCertRequestExtensions">
            <summary>
                A class that extends the functionality if ICertRequest for the needs of our API.
            </summary>
        </member>
        <member name="M:AdcsToRest.CCertRequestExtensions.RetrievePending(CERTCLILib.CCertRequest,System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>
                Retrieves a certificate from a certificate authority.
            </summary>
            <param name="certRequestInterface"></param>
            <param name="configString">The configuration string of the certificate authority.</param>
            <param name="requestId"></param>
            <param name="includeCertificateChain">
                Specifies if the certificate shall be returned as a PKCS#7 container that
                includes the entire certificate chain.
            </param>
            <exception cref="T:System.Web.Http.HttpResponseException">Throws a HTTP 500 error if not successful.</exception>
        </member>
        <member name="M:AdcsToRest.CCertRequestExtensions.Submit(CERTCLILib.CCertRequest,System.String,System.String,System.Collections.Generic.List{System.String},System.Int32,System.Boolean,System.Boolean)">
            <summary>
                Submits a certificate request to a certificate authority.
            </summary>
            <param name="certRequestInterface"></param>
            <param name="configString">The configuration string of the certificate authority.</param>
            <param name="rawCertificateRequest">The certificate request as BASE64 without headers.</param>
            <param name="requestAttributes">
                An optional list of request attributes that shall be passed to the certificate
                authority.
            </param>
            <param name="submissionFlags">Submission flags.</param>
            <param name="includeCertificateChain">
                Specifies if the certificate shall be returned as a PKCS#7 container that
                includes the entire certificate chain.
            </param>
            <exception cref="T:System.Web.Http.HttpResponseException">Throws a HTTP 500 error if not successful.</exception>
        </member>
        <member name="T:AdcsToRest.CertificateRequestIntegrityChecks">
            <summary>
                A class that helps identifying the type of the certificate request and harmonizing it for further processing.
            </summary>
        </member>
        <member name="M:AdcsToRest.CertificateRequestIntegrityChecks.VerifyCertificateRequest(System.String,System.Int32,System.String@)">
            <summary>
                Verifies if the certificate request can be parsed as defined by the requestType.
            </summary>
            <param name="certificateRequest">The certificate request in BASE64 format, with or without headers.</param>
            <param name="requestType">The request type specifies how the certificate request is to be interpreted.</param>
            <param name="rawCertificateRequest">
                Harmonized certificate request, returned as BASE64 without header, regardless of
                the given input.
            </param>
        </member>
        <member name="M:AdcsToRest.CertificateRequestIntegrityChecks.DetectRequestType(System.String,System.String@)">
            <summary>
                Identifies the type of a given certificate request.
            </summary>
            <param name="certificateRequest">
                The input certificate request as BASE64 encoded string (aka PEM), with headers or
                without.
            </param>
            <param name="rawCertificateRequest">The input certificate request as BASE64 encoded string (aka PEM) without headers.</param>
            <returns>The request type to be used with ICertRequest::Submit</returns>
        </member>
        <member name="T:AdcsToRest.Controllers.CertificateAuthorityController">
            <summary>
                An API controller for all operations related to a certificate authority.
            </summary>
        </member>
        <member name="M:AdcsToRest.Controllers.CertificateAuthorityController.GetAllCas(System.Boolean)">
            <summary>
                Retrieves a collection of all available certificate authorities.
            </summary>
        </member>
        <member name="M:AdcsToRest.Controllers.CertificateAuthorityController.GetCaByName(System.String,System.Boolean)">
            <summary>
                Retrieves details for a certificate authority.
            </summary>
            <param name="caName">The common name of the target certificate authority.</param>
        </member>
        <member name="M:AdcsToRest.Controllers.CertificateAuthorityController.GetCertificateByRequestId(System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>
                Retrieves an issued certificate from a certificate authority.
            </summary>
            <param name="caName">The common name of the target certificate authority.</param>
            <param name="requestId">The request ID of the certificate to retrieve.</param>
            <param name="includeCertificateChain">
               Causes to response to be a PKCS#7 container including the certificate chain.
            </param>
        </member>
        <member name="M:AdcsToRest.Controllers.CertificateAuthorityController.SubmitCertificateRequest(System.String,AdcsToRest.Models.CertificateRequest,System.String,System.Boolean,System.Boolean)">
            <summary>
                Submits a certificate signing request to a certificate authority.
            </summary>
            <param name="caName">The common name of the target certificate authority.</param>
            <param name="certificateRequest">The data structure containing the certificate request and optional settings.</param>
            <param name="certificateTemplate">The certificate template the certificate request shall be assigned to.</param>
            <param name="includeCertificateChain">
                Causes to response to be a PKCS#7 container including the certificate chain.
            </param>
        </member>
        <member name="T:AdcsToRest.LocalizedStrings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:AdcsToRest.LocalizedStrings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:AdcsToRest.LocalizedStrings.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:AdcsToRest.LocalizedStrings.DESC_INVALID_CSR">
            <summary>
              Looks up a localized string similar to Unable to parse the given certificate request..
            </summary>
        </member>
        <member name="P:AdcsToRest.LocalizedStrings.DESC_MISSING_CA">
            <summary>
              Looks up a localized string similar to The certificate authority {0} was not found..
            </summary>
        </member>
        <member name="P:AdcsToRest.LocalizedStrings.DESC_MISSING_PARAMETER">
            <summary>
              Looks up a localized string similar to The {0} parameter is missing or invalid..
            </summary>
        </member>
        <member name="P:AdcsToRest.LocalizedStrings.DESC_SUBMISSION_FAILED">
            <summary>
              Looks up a localized string similar to Unable to connect to certificate authority because {0}..
            </summary>
        </member>
        <member name="T:AdcsToRest.Models.CertificateAuthority">
            <summary>
                A data structure holding information about a certificate authority.
            </summary>
        </member>
        <member name="M:AdcsToRest.Models.CertificateAuthority.#ctor(System.DirectoryServices.SearchResult,System.Boolean)">
            <summary>
                Builds the object from a SearchResult containing a pKIEnrollmentService LDAP object.
            </summary>
            <param name="searchResult"></param>
        </member>
        <member name="P:AdcsToRest.Models.CertificateAuthority.Name">
            <summary>
                The common name of the certificate authority.
            </summary>
        </member>
        <member name="P:AdcsToRest.Models.CertificateAuthority.CertificateTemplates">
            <summary>
                A list of all certificate templates offered by the certificate authority.
            </summary>
        </member>
        <member name="P:AdcsToRest.Models.CertificateAuthority.Certificate">
            <summary>
                The current certificate authority certificate of the certificate authority.
            </summary>
        </member>
        <member name="T:AdcsToRest.Models.CertificateAuthorityCollection">
            <summary>
                A collection of CertificateAuthority Objects.
            </summary>
        </member>
        <member name="M:AdcsToRest.Models.CertificateAuthorityCollection.#ctor(System.Collections.Generic.List{AdcsToRest.Models.CertificateAuthority})">
            <summary>
                Builds a CertificateAuthorityCollection.
            </summary>
            <param name="certificateAuthorities">The collection of certificate authorities.</param>
        </member>
        <member name="P:AdcsToRest.Models.CertificateAuthorityCollection.CertificateAuthorities">
            <summary>
                A collection of CertificateAuthority Objects.
            </summary>
        </member>
        <member name="T:AdcsToRest.Models.CertificateRequest">
            <summary>
                A data structure containing a certificate request and a list of optional request attributes.
            </summary>
        </member>
        <member name="P:AdcsToRest.Models.CertificateRequest.Request">
            <summary>
                The X.509 certificate signing request as BASE64 encoded DER. Request types are detected automatically.
            </summary>
        </member>
        <member name="P:AdcsToRest.Models.CertificateRequest.RequestAttributes">
            <summary>
                Optional request attributes as a collection of strings.
            </summary>
        </member>
        <member name="P:AdcsToRest.Models.Status.Code">
            <summary>
                The disposition code returned by the certificate authority for the certificate request as defined in CertCli.h.
            </summary>
        </member>
        <member name="P:AdcsToRest.Models.Status.Description">
            <summary>
                The message the certification authority returned alongside with the disposition.
            </summary>
        </member>
        <member name="T:AdcsToRest.Models.SubmissionResponse">
            <summary>
                A data structure containing the result of a DCOM based operation against the CerSrv.request Interface of a
                certification authority.
            </summary>
        </member>
        <member name="T:AdcsToRest.Models.SubmissionResponse.DispositionCode">
            <summary>
                The possible disposition values returned by the certification authority.
            </summary>
        </member>
        <member name="F:AdcsToRest.Models.SubmissionResponse.DispositionCode.Incomplete">
            <summary>
                Request did not complete
            </summary>
        </member>
        <member name="F:AdcsToRest.Models.SubmissionResponse.DispositionCode.Failed">
            <summary>
                Request failed
            </summary>
        </member>
        <member name="F:AdcsToRest.Models.SubmissionResponse.DispositionCode.Denied">
            <summary>
                Request denied
            </summary>
        </member>
        <member name="F:AdcsToRest.Models.SubmissionResponse.DispositionCode.Issued">
            <summary>
                Certificate issued
            </summary>
        </member>
        <member name="F:AdcsToRest.Models.SubmissionResponse.DispositionCode.IssuedSeparately">
            <summary>
                Certificate issued separately
            </summary>
        </member>
        <member name="F:AdcsToRest.Models.SubmissionResponse.DispositionCode.Pending">
            <summary>
                Request taken under submission
            </summary>
        </member>
        <member name="M:AdcsToRest.Models.SubmissionResponse.#ctor(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
                Builds a SubmissionResponse data structure.
            </summary>
            <param name="statusCode">The HResult status code.</param>
            <param name="requestId">The request id, if any.</param>
            <param name="dispositionCode">The disposition code returned by the certificate authority, if any.</param>
            <param name="certificate">The certificate, if any.</param>
        </member>
        <member name="P:AdcsToRest.Models.SubmissionResponse.RequestId">
            <summary>
                The request ID of the issued certificate, or the pending request.
            </summary>
        </member>
        <member name="P:AdcsToRest.Models.SubmissionResponse.Disposition">
            <summary>
                The disposition status of the submission or retrieval request.
            </summary>
        </member>
        <member name="P:AdcsToRest.Models.SubmissionResponse.Certificate">
            <summary>
                The issued X.509 V3 certificate, if issued by the certificate authority, as BASE64-encoded DER.
            </summary>
        </member>
    </members>
</doc>
