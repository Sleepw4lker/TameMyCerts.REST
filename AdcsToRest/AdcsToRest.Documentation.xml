<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AdcsToRest</name>
    </assembly>
    <members>
        <member name="T:AdcsToRest.ActiveDirectory">
            <summary>
                A class holding methods that help acquiring PKI related information from Active Directory.
            </summary>
        </member>
        <member name="M:AdcsToRest.ActiveDirectory.GetEnrollmentServiceCollection(System.String)">
            <summary>
                Returns a SearchResultCollection holding pKIEnrollmentService objects found in the directory.
            </summary>
            <param name="cn">Common name of a specific ca.</param>
            <returns></returns>
        </member>
        <member name="T:AdcsToRest.CCertRequestExtensions">
            <summary>
                A class that extends the functionality if ICertRequest for the needs of our API.
            </summary>
        </member>
        <member name="M:AdcsToRest.CCertRequestExtensions.RetrievePending(CERTCLILib.CCertRequest,System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>
                Retrieves a certificate from a certification authority.
            </summary>
            <param name="certRequestInterface"></param>
            <param name="configString">The configuration string of the certification authority.</param>
            <param name="requestId"></param>
            <param name="includeCertificateChain">
                Specifies if the certificate shall be returned as a PKCS#7 container that
                includes the entire certificate chain.
            </param>
            <param name="textualEncoding">
                Causes returned PKIX data to be encoded according to RFC 7468 instead of a plain BASE64 stream.
            </param>
        </member>
        <member name="M:AdcsToRest.CCertRequestExtensions.Submit(CERTCLILib.CCertRequest,System.String,System.String,System.Collections.Generic.List{System.String},System.Int32,System.Boolean,System.Boolean)">
            <summary>
                Submits a certificate request to a certification authority.
            </summary>
            <param name="certRequestInterface"></param>
            <param name="configString">The configuration string of the certification authority.</param>
            <param name="rawCertificateRequest">The certificate request as BASE64 without headers.</param>
            <param name="requestAttributes">
                An optional list of request attributes that shall be passed to the certificate
                authority.
            </param>
            <param name="submissionFlags">Submission flags.</param>
            <param name="includeCertificateChain">
                Specifies if the certificate shall be returned as a PKCS#7 container that
                includes the entire certificate chain.
            </param>
            <param name="textualEncoding">
                Causes returned PKIX data to be encoded according to RFC 7468 instead of a plain BASE64 stream.
            </param>
        </member>
        <member name="M:AdcsToRest.CCertRequestExtensions.GetCrlDpCollection(CERTCLILib.CCertRequest,System.String,System.Boolean)">
            <summary>
                Retrieves certificate revocation list distribution point information from a certification authority.
            </summary>
            <param name="certRequestInterface"></param>
            <param name="configString">The configuration string of the certification authority.</param>
            <param name="textualEncoding">
                Causes returned PKIX data to be encoded according to RFC 7468 instead of a plain BASE64 stream.
            </param>
        </member>
        <member name="M:AdcsToRest.CCertRequestExtensions.GetAiaCollection(CERTCLILib.CCertRequest,System.String,System.Boolean)">
            <summary>
                Retrieves authority information access information from a certification authority.
            </summary>
            <param name="certRequestInterface"></param>
            <param name="configString">The configuration string of the certification authority.</param>
            <param name="textualEncoding">
                Causes returned PKIX data to be encoded according to RFC 7468 instead of a plain BASE64 stream.
            </param>
        </member>
        <member name="M:AdcsToRest.CCertRequestExtensions.GetCaCertificate(CERTCLILib.CCertRequest,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
                Retrieves a CA or CA exchange certificate from a certification authority.
            </summary>
            <param name="certRequestInterface"></param>
            <param name="configString">The configuration string of the certification authority.</param>
            <param name="includeCertificateChain">
                Specifies if the certificate shall be returned as a PKCS#7 container that
                includes the entire certificate chain.
            </param>
            <param name="caExchangeCertificate">Returns the CA exchange certificate instead of the CA certificate.</param>
            <param name="textualEncoding">
                Causes returned PKIX data to be encoded according to RFC 7468 instead of a plain BASE64 stream.
            </param>
        </member>
        <member name="T:AdcsToRest.CertificateRequestIntegrityChecks">
            <summary>
                A class that helps identifying the type of the certificate request and harmonizing it for further processing.
            </summary>
        </member>
        <member name="M:AdcsToRest.CertificateRequestIntegrityChecks.VerifyCertificateRequest(System.String,System.Int32,System.String@)">
            <summary>
                Verifies if the certificate request can be parsed as defined by the requestType.
            </summary>
            <param name="certificateRequest">The certificate request in BASE64 format, with or without headers.</param>
            <param name="requestType">The request type specifies how the certificate request is to be interpreted.</param>
            <param name="rawCertificateRequest">
                Harmonized certificate request, returned as BASE64 without header, regardless of
                the given input.
            </param>
        </member>
        <member name="M:AdcsToRest.CertificateRequestIntegrityChecks.DetectRequestType(System.String,System.String@)">
            <summary>
                Identifies the type of a given certificate request.
            </summary>
            <param name="certificateRequest">
                The input certificate request as BASE64 encoded DER.
            </param>
            <param name="rawCertificateRequest">The output certificate request as BASE64 encoded DER.</param>
            <returns>The request type to be used with ICertRequest::Submit.</returns>
        </member>
        <member name="T:AdcsToRest.Controllers.CertificationAuthoritiesController">
            <summary>
                An API controller for all operations related to a certification authority.
            </summary>
        </member>
        <member name="M:AdcsToRest.Controllers.CertificationAuthoritiesController.GetAllCas(System.Boolean)">
            <summary>
                Retrieves a collection of all available certification authorities.
            </summary>
            <param name="textualEncoding">
                Causes returned PKIX data to be encoded according to RFC 7468 instead of a plain BASE64 stream.
            </param>
        </member>
        <member name="M:AdcsToRest.Controllers.CertificationAuthoritiesController.GetCaByName(System.String,System.Boolean)">
            <summary>
                Retrieves details for a certification authority.
            </summary>
            <param name="caName">The common name of the target certification authority.</param>
            <param name="textualEncoding">
                Causes returned PKIX data to be encoded according to RFC 7468 instead of a plain BASE64 stream.
            </param>
        </member>
        <member name="M:AdcsToRest.Controllers.CertificationAuthoritiesController.GetCaCertificate(System.String,System.Boolean,System.Boolean)">
            <summary>
                Retrieves the current certification authority certificate for a certification authority.
            </summary>
            <param name="caName">The common name of the target certification authority.</param>
            <param name="includeCertificateChain">Causes the response to be a PKCS#7 container including the certificate chain.</param>
            <param name="textualEncoding">
                Causes returned PKIX data to be encoded according to RFC 7468 instead of a plain BASE64 stream.
            </param>
        </member>
        <member name="M:AdcsToRest.Controllers.CertificationAuthoritiesController.GetCaExchangeCertificate(System.String,System.Boolean,System.Boolean)">
            <summary>
                Retrieves the current certification authority exchange certificate for a certification authority.
            </summary>
            <param name="caName">The common name of the target certification authority.</param>
            <param name="includeCertificateChain">Causes the response to be a PKCS#7 container including the certificate chain.</param>
            <param name="textualEncoding">
                Causes returned PKIX data to be encoded according to RFC 7468 instead of a plain BASE64 stream.
            </param>
        </member>
        <member name="M:AdcsToRest.Controllers.CertificationAuthoritiesController.GetCrlDp(System.String,System.Boolean)">
            <summary>
                Retrieves a collection of certificate revocation list distribution points for a certification authority.
            </summary>
            <param name="caName">The common name of the target certification authority.</param>
            <param name="textualEncoding">
                Causes returned PKIX data to be encoded according to RFC 7468 instead of a plain BASE64 stream.
            </param>
        </member>
        <member name="M:AdcsToRest.Controllers.CertificationAuthoritiesController.GetAia(System.String,System.Boolean)">
            <summary>
                Retrieves a collection of authority information access distribution points for a certification authority.
            </summary>
            <param name="caName">The common name of the target certification authority.</param>
            <param name="textualEncoding">
                Causes returned PKIX data to be encoded according to RFC 7468 instead of a plain BASE64 stream.
            </param>
        </member>
        <member name="T:AdcsToRest.Controllers.CertificatesController">
            <summary>
                An API controller for all operations related to PKIX certificates.
            </summary>
        </member>
        <member name="M:AdcsToRest.Controllers.CertificatesController.GetCertificateByRequestId(System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>
                Retrieves an issued certificate from a certification authority.
            </summary>
            <param name="caName">The common name of the target certification authority.</param>
            <param name="requestId">The request identifier of the certificate to retrieve.</param>
            <param name="includeCertificateChain">Causes the response to be a PKCS#7 container including the certificate chain.</param>
            <param name="textualEncoding">
                Causes returned PKIX data to be encoded according to RFC 7468 instead of a plain BASE64 stream.
            </param>
        </member>
        <member name="M:AdcsToRest.Controllers.CertificatesController.SubmitCertificateRequest(System.String,AdcsToRest.Models.CertificateRequest,System.String,System.Boolean,System.Boolean)">
            <summary>
                Submits a certificate signing request to a certification authority.
            </summary>
            <param name="caName">The common name of the target certification authority.</param>
            <param name="certificateRequest">The data structure containing the certificate request and optional settings.</param>
            <param name="certificateTemplate">The certificate template the certificate request shall be assigned to.</param>
            <param name="includeCertificateChain">Causes the response to be a PKCS#7 container including the certificate chain.</param>
            <param name="textualEncoding">
                Causes returned PKIX data to be encoded according to RFC 7468 instead of a plain BASE64 stream.
            </param>
        </member>
        <member name="T:AdcsToRest.Controllers.CertificateTemplatesController">
            <summary>
                An API controller for all operations related to certificate templates.
            </summary>
        </member>
        <member name="M:AdcsToRest.Controllers.CertificateTemplatesController.GetCertificateTemplateCollection">
            <summary>
                Retrieves a collection of all certificate templates in the underlying Active Directory environment.
            </summary>
        </member>
        <member name="M:AdcsToRest.Controllers.CertificateTemplatesController.GetCertificateTemplate(System.String)">
            <summary>
                Retrieves details for a certificate template.
            </summary>
            <param name="templateName">The name of the target certificate template.</param>
        </member>
        <member name="M:AdcsToRest.Controllers.CertificateTemplatesController.GetCertificateTemplateIssuers(System.String,System.Boolean)">
            <summary>
                Retrieves a collection of certification authorities that issue certificates for a given certificate template.
            </summary>
            <param name="templateName">The name of the target certificate template.</param>
            <param name="textualEncoding">
                Causes returned PKIX data to be encoded according to RFC 7468 instead of a plain BASE64 stream.
            </param>
        </member>
        <member name="T:AdcsToRest.LocalizedStrings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:AdcsToRest.LocalizedStrings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:AdcsToRest.LocalizedStrings.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:AdcsToRest.LocalizedStrings.DESC_CA_DENIED">
            <summary>
              Looks up a localized string similar to You do not have permission to request certificates from {0}..
            </summary>
        </member>
        <member name="P:AdcsToRest.LocalizedStrings.DESC_INVALID_CSR">
            <summary>
              Looks up a localized string similar to Unable to parse the given certificate request..
            </summary>
        </member>
        <member name="P:AdcsToRest.LocalizedStrings.DESC_MISSING_CA">
            <summary>
              Looks up a localized string similar to The certification authority {0} was not found..
            </summary>
        </member>
        <member name="P:AdcsToRest.LocalizedStrings.DESC_MISSING_PARAMETER">
            <summary>
              Looks up a localized string similar to The {0} parameter is missing or invalid..
            </summary>
        </member>
        <member name="P:AdcsToRest.LocalizedStrings.DESC_MISSING_TEMPLATE">
            <summary>
              Looks up a localized string similar to The certificate template {0} was not found..
            </summary>
        </member>
        <member name="P:AdcsToRest.LocalizedStrings.DESC_TEMPLATED_DENIED">
            <summary>
              Looks up a localized string similar to You do not have permission to enroll for {0}..
            </summary>
        </member>
        <member name="P:AdcsToRest.LocalizedStrings.DESC_UNHANDLED_EXCEPTION">
             <summary>
               Looks up a localized string similar to An unhandled exception has occurred: {0}
            
            {1}.
             </summary>
        </member>
        <member name="P:AdcsToRest.LocalizedStrings.UNKNOWN">
            <summary>
              Looks up a localized string similar to unknown.
            </summary>
        </member>
        <member name="T:AdcsToRest.Logger">
            <summary>
                A simple class to write to the Windows Event log.
            </summary>
        </member>
        <member name="M:AdcsToRest.Logger.Log(System.Exception)">
            <summary>
                Logs an exception to the Windows Application Event log.
            </summary>
            <param name="ex"></param>
        </member>
        <member name="T:AdcsToRest.Models.AuthorityInformationAccess">
            <summary>
                A data structure containing authority information access for a certification authority.
            </summary>
        </member>
        <member name="M:AdcsToRest.Models.AuthorityInformationAccess.#ctor(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.String)">
            <summary>
                Initiates an AuthorityInformationAccess object.
            </summary>
        </member>
        <member name="P:AdcsToRest.Models.AuthorityInformationAccess.Urls">
            <summary>
                A collection of authority information access urls that are available for the certification authority certificate.
            </summary>
        </member>
        <member name="P:AdcsToRest.Models.AuthorityInformationAccess.OcspUrls">
            <summary>
                A collection of available online certificate status protocol urls.
            </summary>
        </member>
        <member name="P:AdcsToRest.Models.AuthorityInformationAccess.Certificate">
            <summary>
                The PKIX certification authority certificate.
            </summary>
        </member>
        <member name="T:AdcsToRest.Models.AuthorityInformationAccessCollection">
            <summary>
                Contains a list of authority information access distribution points.
            </summary>
        </member>
        <member name="M:AdcsToRest.Models.AuthorityInformationAccessCollection.#ctor(System.Collections.Generic.List{AdcsToRest.Models.AuthorityInformationAccess})">
            <summary>
                Builds the collection out of a given list of authority information access distribution points.
            </summary>
        </member>
        <member name="P:AdcsToRest.Models.AuthorityInformationAccessCollection.AuthorityInformationAccess">
            <summary>
                Contains a list of authority information access distribution points.
            </summary>
        </member>
        <member name="T:AdcsToRest.Models.CertificateRevocationListDistributionPointCollection">
            <summary>
                Contains a list of certificate revocation list distribution points.
            </summary>
        </member>
        <member name="M:AdcsToRest.Models.CertificateRevocationListDistributionPointCollection.#ctor(System.Collections.Generic.List{AdcsToRest.Models.CertificateRevocationListDistributionPoint})">
            <summary>
                Builds the collection out of a given list of certificate revocation list distribution points.
            </summary>
        </member>
        <member name="P:AdcsToRest.Models.CertificateRevocationListDistributionPointCollection.CertificateRevocationListDistributionPoints">
            <summary>
                Contains a list of certificate revocation list distribution points.
            </summary>
        </member>
        <member name="T:AdcsToRest.Models.CertificationAuthority">
            <summary>
                A data structure holding information about a certification authority.
            </summary>
        </member>
        <member name="M:AdcsToRest.Models.CertificationAuthority.#ctor(System.DirectoryServices.SearchResult,System.Boolean)">
            <summary>
                Builds the object from a SearchResult containing a pKIEnrollmentService LDAP object.
            </summary>
            <param name="searchResult"></param>
            <param name="textualEncoding">
                Causes returned PKIX data to be encoded according to RFC 7468 instead of a plain BASE64 stream.
            </param>
        </member>
        <member name="P:AdcsToRest.Models.CertificationAuthority.Name">
            <summary>
                The common name of the certification authority.
            </summary>
        </member>
        <member name="P:AdcsToRest.Models.CertificationAuthority.ConfigurationString">
            <summary>
                The configuration string for this certification authority.
            </summary>
        </member>
        <member name="P:AdcsToRest.Models.CertificationAuthority.CertificateTemplates">
            <summary>
                A list of all certificate templates offered by the certification authority.
            </summary>
        </member>
        <member name="P:AdcsToRest.Models.CertificationAuthority.Certificate">
            <summary>
                The current certification authority certificate of the certification authority.
            </summary>
        </member>
        <member name="M:AdcsToRest.Models.CertificationAuthority.Create(System.String,System.Boolean)">
            <summary>
                Builds a CertificationAuthority object out of a given name.
            </summary>
            <param name="caName">The name of the target certification authority.</param>
            <param name="textualEncoding">
                Causes returned PKIX data to be encoded according to RFC 7468 instead of a plain BASE64 stream.
            </param>
        </member>
        <member name="M:AdcsToRest.Models.CertificationAuthority.AllowsForEnrollment(System.Security.Principal.WindowsIdentity,System.Boolean)">
            <summary>
                Determines whether a given WindowsIdentity may enroll for certificates from this certification authority.
            </summary>
            <param name="identity">The Windows identity to check for permissions.</param>
            <param name="explicitlyPermitted">Return true only if the identity is explicitly mentioned in the acl.</param>
            <returns></returns>
        </member>
        <member name="T:AdcsToRest.Models.CertificationAuthorityCollection">
            <summary>
                A collection of CertificationAuthority Objects.
            </summary>
        </member>
        <member name="M:AdcsToRest.Models.CertificationAuthorityCollection.#ctor(System.Collections.Generic.List{AdcsToRest.Models.CertificationAuthority})">
            <summary>
                Builds a CertificationAuthorityCollection out of a given list.
            </summary>
            <param name="certificationAuthorities">The collection of certification authorities.</param>
        </member>
        <member name="M:AdcsToRest.Models.CertificationAuthorityCollection.#ctor(System.Boolean)">
            <summary>
                Builds a CertificationAuthorityCollection out of the information available in Active Directory.
            </summary>
            <param name="textualEncoding">
                Causes returned PKIX data to be encoded according to RFC 7468 instead of a plain BASE64 stream.
            </param>
        </member>
        <member name="P:AdcsToRest.Models.CertificationAuthorityCollection.CertificationAuthorities">
            <summary>
                A collection of CertificationAuthority Objects.
            </summary>
        </member>
        <member name="T:AdcsToRest.Models.CertificateRequest">
            <summary>
                A data structure containing a certificate request and a list of optional request attributes.
            </summary>
        </member>
        <member name="P:AdcsToRest.Models.CertificateRequest.Request">
            <summary>
                The PKIX certificate signing request as BASE64 encoded DER. Request type gets detected automatically.
            </summary>
        </member>
        <member name="P:AdcsToRest.Models.CertificateRequest.RequestAttributes">
            <summary>
                Optional request attributes as a collection of strings.
            </summary>
        </member>
        <member name="T:AdcsToRest.Models.CertificateRevocationListDistributionPoint">
            <summary>
                A data structure containing CRL distribution point information for a certification authority.
            </summary>
        </member>
        <member name="M:AdcsToRest.Models.CertificateRevocationListDistributionPoint.#ctor(System.Collections.Generic.List{System.String},System.String)">
            <summary>
                Initiates a CertificateRevocationListDistributionPoint object.
            </summary>
        </member>
        <member name="P:AdcsToRest.Models.CertificateRevocationListDistributionPoint.Urls">
            <summary>
                A collection of addresses under which the CRL is distributed by the certification authority.
            </summary>
        </member>
        <member name="P:AdcsToRest.Models.CertificateRevocationListDistributionPoint.CertificateRevocationList">
            <summary>
                The PKIX certificate revocation list.
            </summary>
        </member>
        <member name="T:AdcsToRest.Models.CertificateTemplate">
            <summary>
                Information about a certificate template.
            </summary>
        </member>
        <member name="T:AdcsToRest.Models.CertificateTemplate.KeyAlgorithmType">
            <summary>
                Supported public key algorithm types.
            </summary>
        </member>
        <member name="F:AdcsToRest.Models.CertificateTemplate.KeyAlgorithmType.RSA">
            <summary>
                The RSA algorithm.
            </summary>
        </member>
        <member name="F:AdcsToRest.Models.CertificateTemplate.KeyAlgorithmType.ECDSA_P256">
            <summary>
                The elliptic curve digital signature algorithm using the nistp256 curve.
            </summary>
        </member>
        <member name="F:AdcsToRest.Models.CertificateTemplate.KeyAlgorithmType.ECDSA_P384">
            <summary>
                The elliptic curve digital signature algorithm using the nistp384 curve.
            </summary>
        </member>
        <member name="F:AdcsToRest.Models.CertificateTemplate.KeyAlgorithmType.ECDSA_P521">
            <summary>
                The elliptic curve digital signature algorithm using the nistp521 curve.
            </summary>
        </member>
        <member name="F:AdcsToRest.Models.CertificateTemplate.KeyAlgorithmType.ECDH_P256">
            <summary>
                The elliptic curve diffie hellman algorithm using the nistp256 curve.
            </summary>
        </member>
        <member name="F:AdcsToRest.Models.CertificateTemplate.KeyAlgorithmType.ECDH_P384">
            <summary>
                The elliptic curve diffie hellman algorithm using the nistp384 curve.
            </summary>
        </member>
        <member name="F:AdcsToRest.Models.CertificateTemplate.KeyAlgorithmType.ECDH_P521">
            <summary>
                The elliptic curve diffie hellman algorithm using the nistp521 curve.
            </summary>
        </member>
        <member name="P:AdcsToRest.Models.CertificateTemplate.Name">
            <summary>
                The common name of the certificate template.
            </summary>
        </member>
        <member name="P:AdcsToRest.Models.CertificateTemplate.DisplayName">
            <summary>
                The display name of the certificate template.
            </summary>
        </member>
        <member name="P:AdcsToRest.Models.CertificateTemplate.ObjectIdentifier">
            <summary>
                The object identifier of the certificate template.
            </summary>
        </member>
        <member name="P:AdcsToRest.Models.CertificateTemplate.EnrolleeSuppliesSubject">
            <summary>
            Specifies if the enrollee may provide subject information with the certificate request.
            </summary>
        </member>
        <member name="P:AdcsToRest.Models.CertificateTemplate.KeyAlgorithm">
            <summary>
                Specifies the key algorithm the certificate will be signed with.
            </summary>
        </member>
        <member name="P:AdcsToRest.Models.CertificateTemplate.MinimumKeyLength">
            <summary>
                The minimum accepted key length of the certificate template.
            </summary>
        </member>
        <member name="P:AdcsToRest.Models.CertificateTemplate.ValidityPeriod">
            <summary>
                The validity period of issued certificates for this certificate template.
            </summary>
        </member>
        <member name="P:AdcsToRest.Models.CertificateTemplate.RenewalOverlap">
            <summary>
                The desired renewal overlap period for this certificate template.
            </summary>
        </member>
        <member name="P:AdcsToRest.Models.CertificateTemplate.MajorVersion">
            <summary>
                The major version of the certificate template.
            </summary>
        </member>
        <member name="P:AdcsToRest.Models.CertificateTemplate.MinorVersion">
            <summary>
                The minor version of the certificate template.
            </summary>
        </member>
        <member name="P:AdcsToRest.Models.CertificateTemplate.SchemaVersion">
            <summary>
                The Active Directory schema version of the certificate template.
            </summary>
        </member>
        <member name="P:AdcsToRest.Models.CertificateTemplate.KeyUsageExtension">
            <summary>
                Information about the key usage extension of the certificate template.
            </summary>
        </member>
        <member name="P:AdcsToRest.Models.CertificateTemplate.ExtendedKeyUsageExtension">
            <summary>
                Information about the extended key usage extension of the certificate template.
            </summary>
        </member>
        <member name="M:AdcsToRest.Models.CertificateTemplate.Create(System.String)">
            <summary>
                Builds a new CertificateTemplate object.
            </summary>
            <param name="templateName">The name of the certificate template from which the object is built.</param>
        </member>
        <member name="M:AdcsToRest.Models.CertificateTemplate.AllowsForEnrollment(System.Security.Principal.WindowsIdentity,System.Boolean)">
            <summary>
                Determines whether a given WindowsIdentity may enroll for this certificate template.
            </summary>
            <param name="identity">The Windows identity to check for permissions.</param>
            <param name="explicitlyPermitted">Return true only if the identity is explicitly mentioned in the acl.</param>
            <returns></returns>
        </member>
        <member name="T:AdcsToRest.Models.CertificateTemplateCollection">
            <summary>
                A collection of CertificateTemplate Objects.
            </summary>
        </member>
        <member name="M:AdcsToRest.Models.CertificateTemplateCollection.#ctor">
            <summary>
                Builds a CertificateTemplateCollection.
            </summary>
        </member>
        <member name="M:AdcsToRest.Models.CertificateTemplateCollection.#ctor(System.Collections.Generic.List{AdcsToRest.Models.CertificateTemplate})">
            <summary>
                Builds a CertificateTemplateCollection.
            </summary>
        </member>
        <member name="P:AdcsToRest.Models.CertificateTemplateCollection.CertificateTemplates">
            <summary>
                A collection of CertificateTemplate Objects.
            </summary>
        </member>
        <member name="T:AdcsToRest.Models.ExtendedKeyUsage">
            <summary>
                Information about an extended key usage.
            </summary>
        </member>
        <member name="M:AdcsToRest.Models.ExtendedKeyUsage.#ctor(System.String)">
            <summary>
                Builds the ExtendedKeyUsage out of a given object identifier.
            </summary>
            <param name="objectIdentifier">The object identifier of the extended key usage.</param>
        </member>
        <member name="P:AdcsToRest.Models.ExtendedKeyUsage.ObjectIdentifier">
            <summary>
                The object identifier of the extended key usage.
            </summary>
        </member>
        <member name="P:AdcsToRest.Models.ExtendedKeyUsage.FriendlyName">
            <summary>
                The friendly name of the extended key usage.
            </summary>
        </member>
        <member name="T:AdcsToRest.Models.ExtendedKeyUsageExtension">
            <summary>
                Information about the extended key usage extension of the certificate template.
            </summary>
        </member>
        <member name="M:AdcsToRest.Models.ExtendedKeyUsageExtension.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
                Builds an EnhancedKeyUsageExtension out of a given list of object identifiers.
            </summary>
            <param name="extendedKeyUsages">The list of object identifiers to build the object from.</param>
            <param name="critical">Indicates whether the extension is critical or not.</param>
        </member>
        <member name="P:AdcsToRest.Models.ExtendedKeyUsageExtension.Critical">
            <summary>
                Indicates whether the extension is critical or not.
            </summary>
        </member>
        <member name="P:AdcsToRest.Models.ExtendedKeyUsageExtension.ExtendedKeyUsages">
            <summary>
                A list of extended key usages of the certificate template.
            </summary>
        </member>
        <member name="T:AdcsToRest.Models.KeyUsage.KeyUsageType">
            <summary>
                Key Usage types according to RFC 5280.
            </summary>
        </member>
        <member name="F:AdcsToRest.Models.KeyUsage.KeyUsageType.digitalSignature">
            <summary>
                The digitalSignature bit is asserted when the subject public key is used for verifying digital signatures, other
                than signatures on certificates , such as those used  in an entity authentication service, a data origin
                authentication service, and/or an integrity service.
            </summary>
        </member>
        <member name="F:AdcsToRest.Models.KeyUsage.KeyUsageType.nonRepudiation">
            <summary>
                The nonRepudiation bit is asserted when the subject public key is used to verify digital signatures, other than
                signatures on certificates , used to provide a non-repudiation service that protects against the signing entity
                falsely denying some action. In the case of later conflict, a reliable third party may determine the authenticity
                of the signed data.
            </summary>
        </member>
        <member name="F:AdcsToRest.Models.KeyUsage.KeyUsageType.keyEncipherment">
            <summary>
                The keyEncipherment bit is asserted when the subject public key is used for enciphering private or secret keys,
                i.e., for key transport. For example, this bit shall be set when an RSA public key is to be used for encrypting a
                symmetric content-decryption key or an asymmetric private key.
            </summary>
        </member>
        <member name="F:AdcsToRest.Models.KeyUsage.KeyUsageType.dataEncipherment">
            <summary>
                The dataEncipherment bit is asserted when the subject public key is used for directly enciphering raw user data
                without the use of an intermediate symmetric cipher.
            </summary>
        </member>
        <member name="F:AdcsToRest.Models.KeyUsage.KeyUsageType.keyAgreement">
            <summary>
                The keyAgreement bit is asserted when the subject public key is used for key agreement. For example, when a
                Diffie-Hellman key is to be used for key management, then this bit is set.
            </summary>
        </member>
        <member name="F:AdcsToRest.Models.KeyUsage.KeyUsageType.keyCertSign">
            <summary>
                The keyCertSign bit is asserted when the subject public key is used for verifying signatures on public key
                certificates.
            </summary>
        </member>
        <member name="F:AdcsToRest.Models.KeyUsage.KeyUsageType.cRLSign">
            <summary>
                The cRLSign bit is asserted when the subject public key is used for verifying signatures on certificate revocation
                lists (e.g., CRLs, delta CRLs, or ARLs).
            </summary>
        </member>
        <member name="F:AdcsToRest.Models.KeyUsage.KeyUsageType.encipherOnly">
            <summary>
                The meaning of the encipherOnly bit is undefined in the absence of the keyAgreement bit.  When the encipherOnly bit
                is asserted and the keyAgreement bit is also set,  the subject public key may be used only for enciphering data
                while performing key agreement.
            </summary>
        </member>
        <member name="M:AdcsToRest.Models.KeyUsage.#ctor(System.Int32)">
            <summary>
                Builds a KeyUsage out of the given integer value.
            </summary>
            <param name="value">The value to build the object from.</param>
        </member>
        <member name="P:AdcsToRest.Models.KeyUsage.Value">
            <summary>
                The numerical value of the key usage.
            </summary>
        </member>
        <member name="P:AdcsToRest.Models.KeyUsage.FriendlyName">
            <summary>
                The friendly name of the key usage.
            </summary>
        </member>
        <member name="T:AdcsToRest.Models.KeyUsageExtension">
            <summary>
                Information about the key usage extension of the certificate template.
            </summary>
        </member>
        <member name="M:AdcsToRest.Models.KeyUsageExtension.#ctor(System.Collections.Generic.IReadOnlyList{System.Byte},System.Boolean)">
            <summary>
                Builds a KeyUsageExtension out of a given byte array.
            </summary>
            <param name="bytes">The byte array to build the object from.</param>
            <param name="critical">Indicates whether the extension is critical or not.</param>
        </member>
        <member name="P:AdcsToRest.Models.KeyUsageExtension.Value">
            <summary>
                The numerical value of the extension.
            </summary>
        </member>
        <member name="P:AdcsToRest.Models.KeyUsageExtension.Critical">
            <summary>
                Indicates whether the extension is critical or not.
            </summary>
        </member>
        <member name="P:AdcsToRest.Models.KeyUsageExtension.KeyUsages">
            <summary>
                A list of key usages of the certificate template.
            </summary>
        </member>
        <member name="T:AdcsToRest.Models.Status">
            <summary>
                Additional status information about the outcome of the submission process.
            </summary>
        </member>
        <member name="M:AdcsToRest.Models.Status.#ctor(System.Int32)">
            <summary>
                Additional status information about the outcome of the submission process.
            </summary>
        </member>
        <member name="P:AdcsToRest.Models.Status.StatusCode">
            <summary>
                The result code returned by the certification authority during the submission process.
            </summary>
        </member>
        <member name="P:AdcsToRest.Models.Status.Description">
            <summary>
                The message the certification authority returned alongside with the result code.
            </summary>
        </member>
        <member name="T:AdcsToRest.Models.SubmissionResponse">
            <summary>
                A data structure containing the result of an operation against a certification authority.
            </summary>
        </member>
        <member name="T:AdcsToRest.Models.SubmissionResponse.DispositionCode">
            <summary>
                The possible disposition values returned by the certification authority.
            </summary>
        </member>
        <member name="F:AdcsToRest.Models.SubmissionResponse.DispositionCode.Incomplete">
            <summary>
                Request did not complete
            </summary>
        </member>
        <member name="F:AdcsToRest.Models.SubmissionResponse.DispositionCode.Failed">
            <summary>
                Request failed
            </summary>
        </member>
        <member name="F:AdcsToRest.Models.SubmissionResponse.DispositionCode.Denied">
            <summary>
                Request denied
            </summary>
        </member>
        <member name="F:AdcsToRest.Models.SubmissionResponse.DispositionCode.Issued">
            <summary>
                Certificate issued
            </summary>
        </member>
        <member name="F:AdcsToRest.Models.SubmissionResponse.DispositionCode.IssuedSeparately">
            <summary>
                Certificate issued separately
            </summary>
        </member>
        <member name="F:AdcsToRest.Models.SubmissionResponse.DispositionCode.Pending">
            <summary>
                Request taken under submission
            </summary>
        </member>
        <member name="F:AdcsToRest.Models.SubmissionResponse.DispositionCode.Revoked">
            <summary>
                The certificate has been revoked by the certification authority.
            </summary>
        </member>
        <member name="M:AdcsToRest.Models.SubmissionResponse.#ctor(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
                Builds a SubmissionResponse data structure.
            </summary>
            <param name="statusCode">The HResult status code.</param>
            <param name="requestId">The request identifier, if any.</param>
            <param name="dispositionCode">The disposition code returned by the certification authority, if any.</param>
            <param name="certificate">The certificate, if any.</param>
        </member>
        <member name="P:AdcsToRest.Models.SubmissionResponse.RequestId">
            <summary>
                The request identifier of the issued certificate, or the pending request.
            </summary>
        </member>
        <member name="P:AdcsToRest.Models.SubmissionResponse.Disposition">
            <summary>
                The disposition status of the submission or retrieval request.
            </summary>
        </member>
        <member name="P:AdcsToRest.Models.SubmissionResponse.Status">
            <summary>
                Additional status information about the outcome of the submission process.
            </summary>
        </member>
        <member name="P:AdcsToRest.Models.SubmissionResponse.Certificate">
            <summary>
                The issued PKIX certificate, if issued by the certification authority, as BASE64-encoded DER.
            </summary>
        </member>
        <member name="T:AdcsToRest.Filters.UnhandledExceptionFilterAttribute">
            <summary>
                A class to log unhandled exceptions.
            </summary>
        </member>
        <member name="M:AdcsToRest.Filters.UnhandledExceptionFilterAttribute.OnException(System.Web.Http.Filters.HttpActionExecutedContext)">
            <summary>
                Writes unhandled exceptions to the Windows Event log.
            </summary>
            <param name="actionExecutedContext"></param>
        </member>
    </members>
</doc>
